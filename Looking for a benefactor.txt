/*
The accounts of the "Fat to Fit Club (FFC)" association are supervised by John as a volunteered accountant. The association is funded through financial donations from generous benefactors. John has a list of the first n donations: [14, 30, 5, 7, 9, 11, 15] He wants to know how much the next benefactor should give to the association so that the average of the first n + 1 donations should reach an average of 30. After doing the math he found 149. He thinks that he made a mistake. Could you help him?

if dons = [14, 30, 5, 7, 9, 11, 15] then new_avg(dons, 30) --> 149

The function new_avg(arr, navg) should return the expected donation (rounded up to the next integer) that will permit to reach the average navg.

Should the last donation be a non positive number (<= 0) John wants us to throw an error

(return Nothing in Haskell, return None in F# and Ocaml, return -1 in C, Fortran, Nim, PowerShell, echo ERRORin Shell)

*/

import com.sun.org.apache.xerces.internal.impl.xpath.regex.Match;

public class NewAverage {

    public static long newAvg(double[] arr, double navg) {

        double result = 0;
        for (int i = 0; i < arr.length; i++) {

            result = result + arr[i];
        }


        if ((navg * (arr.length + 1) - result) > 0) {
            return Math.round(navg * (arr.length + 1) - result);
        } else {
            throw new IllegalArgumentException();
        }
    }
}